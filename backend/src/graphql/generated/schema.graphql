### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly

input ArtistCreateManyWithoutTrackInput {
  connect: [ArtistWhereUniqueInput!]
  create: [ArtistCreateWithoutTrackInput!]
}

input ArtistCreateWithoutTrackInput {
  id: String
  name: String!
}

input ArtistWhereUniqueInput {
  id: String
}

type Mutation {
  createOnePlaylist(data: PlaylistCreateInput!): Playlist!
  createOneSuggestion(data: SuggestionCreateInput!): Suggestion!
}

type Playlist {
  description: String
  id: String!
  name: String!
}

input PlaylistCreateInput {
  description: String
  id: String
  name: String!
}

input PlaylistWhereUniqueInput {
  id: String
}

type Query {
  playlist(where: PlaylistWhereUniqueInput!): Playlist
  playlists(
    after: PlaylistWhereUniqueInput
    before: PlaylistWhereUniqueInput
    first: Int
    last: Int
    skip: Int
  ): [Playlist!]!
  suggestion(where: SuggestionWhereUniqueInput!): Suggestion
  suggestions(
    after: SuggestionWhereUniqueInput
    before: SuggestionWhereUniqueInput
    first: Int
    last: Int
    skip: Int
  ): [Suggestion!]!
}

type Suggestion {
  id: String!
  submitter: String!
}

input SuggestionCreateInput {
  id: String
  submitter: String!
  track: TrackCreateOneWithoutSuggestionsInput!
}

input SuggestionWhereUniqueInput {
  id: String
}

input TrackCreateOneWithoutSuggestionsInput {
  connect: TrackWhereUniqueInput
  create: TrackCreateWithoutSuggestionsInput
}

input TrackCreateWithoutSuggestionsInput {
  artists: ArtistCreateManyWithoutTrackInput
  id: String
  source: TrackSource!
  url: String!
}

enum TrackSource {
  Spotify
  Youtube
}

input TrackWhereUniqueInput {
  id: String
}
